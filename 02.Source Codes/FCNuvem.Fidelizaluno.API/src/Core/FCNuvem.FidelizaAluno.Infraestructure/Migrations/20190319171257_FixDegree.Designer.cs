// <auto-generated />
using System;
using FCNuvem.FidelizaAluno.Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FCNuvem.FidelizaAluno.Infraestructure.Migrations
{
    [DbContext(typeof(EfContext))]
    [Migration("20190319171257_FixDegree")]
    partial class FixDegree
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.AddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("City")
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("Latitude");

                    b.Property<decimal>("Longitude");

                    b.Property<string>("Number")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Region")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Address");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.AlertEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("IdReason");

                    b.Property<int>("IdTemplate");

                    b.HasKey("Id")
                        .HasName("PK_Alert");

                    b.HasIndex("IdReason")
                        .HasName("IX_IdReason");

                    b.HasIndex("IdTemplate")
                        .HasName("IX_IdTemplate");

                    b.ToTable("Alert");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.CampusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampusType");

                    b.Property<string>("Cnpj")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("IdAddress");

                    b.Property<int>("IdInstituition");

                    b.Property<int?>("IdInstitution");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Telephone")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Campus");

                    b.HasIndex("IdAddress")
                        .HasName("IX_IdAddress");

                    b.HasIndex("IdInstitution")
                        .HasName("IX_IdInstitution");

                    b.ToTable("Campus");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.CampusProgramEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCampus");

                    b.Property<int>("IdProgram");

                    b.HasKey("Id")
                        .HasName("PK_CampusProgram");

                    b.HasIndex("IdCampus")
                        .HasName("IX_IdCampus");

                    b.HasIndex("IdProgram")
                        .HasName("IX_IdProgram");

                    b.ToTable("CampusProgram");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ClassDiaryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseEntityId");

                    b.Property<DateTime>("Data");

                    b.Property<int>("IdClass");

                    b.Property<int>("IdEmployee");

                    b.Property<int>("IdStudent");

                    b.Property<string>("Observation")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_ClassDiary");

                    b.HasIndex("CourseEntityId")
                        .HasName("IX_CourseEntityId");

                    b.HasIndex("IdClass")
                        .HasName("IX_IdClass");

                    b.HasIndex("IdEmployee")
                        .HasName("IX_IdEmployee");

                    b.HasIndex("IdStudent")
                        .HasName("IX_IdStudent");

                    b.ToTable("ClassDiary");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ClassEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ClassDate");

                    b.Property<TimeSpan>("EndDate");

                    b.Property<int>("IdDegree");

                    b.Property<TimeSpan>("StartDate");

                    b.HasKey("Id")
                        .HasName("PK_Class");

                    b.HasIndex("IdDegree")
                        .HasName("IX_IdDegree");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ClassRoomEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInicial");

                    b.Property<string>("Half")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("IdEmployee");

                    b.Property<int>("IdPeriod");

                    b.Property<int>("IdProgram");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_ClassRoom");

                    b.HasIndex("IdEmployee")
                        .HasName("IX_IdEmployee");

                    b.HasIndex("IdPeriod")
                        .HasName("IX_IdPeriod");

                    b.HasIndex("IdProgram")
                        .HasName("IX_IdProgram");

                    b.ToTable("ClassRoom");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ClassRoomStudentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdClassRoom");

                    b.Property<int>("IdStudent");

                    b.HasKey("Id")
                        .HasName("PK_ClassRoomStudent");

                    b.HasIndex("IdClassRoom")
                        .HasName("IX_IdClassRoom");

                    b.HasIndex("IdStudent")
                        .HasName("IX_IdStudent");

                    b.ToTable("ClassRoomStudent");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.CourseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("Time");

                    b.HasKey("Id")
                        .HasName("PK_Course");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.DegreeCourseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseId");

                    b.Property<int?>("DegreeId");

                    b.Property<int>("IdCourse");

                    b.Property<int>("IdDegree");

                    b.HasKey("Id")
                        .HasName("PK_DegreeCourse");

                    b.HasIndex("CourseId")
                        .HasName("IX_CourseId");

                    b.HasIndex("DegreeId")
                        .HasName("IX_DegreeId");

                    b.ToTable("DegreeCourse");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.DegreeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassRoomEntityId");

                    b.Property<TimeSpan>("EndTime");

                    b.Property<int>("IdClass");

                    b.Property<int>("IdCourse");

                    b.Property<int>("IdEmployee");

                    b.Property<int>("Load");

                    b.Property<TimeSpan>("StartTime");

                    b.HasKey("Id")
                        .HasName("PK_Degree");

                    b.HasIndex("ClassRoomEntityId")
                        .HasName("IX_ClassRoomEntityId");

                    b.HasIndex("IdCourse")
                        .HasName("IX_IdCourse");

                    b.HasIndex("IdEmployee")
                        .HasName("IX_IdEmployee");

                    b.ToTable("Degree");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.EmployeeCampusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCampus");

                    b.Property<int>("IdEmployee");

                    b.HasKey("Id")
                        .HasName("PK_EmployeeCampus");

                    b.HasIndex("IdCampus")
                        .HasName("IX_IdCampus");

                    b.HasIndex("IdEmployee")
                        .HasName("IX_IdEmployee");

                    b.ToTable("EmployeeCampus");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.EmployeeCourseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCourse");

                    b.Property<int>("IdEmployee");

                    b.HasKey("Id")
                        .HasName("PK_EmployeeCourse");

                    b.HasIndex("IdCourse")
                        .HasName("IX_IdCourse");

                    b.HasIndex("IdEmployee")
                        .HasName("IX_IdEmployee");

                    b.ToTable("EmployeeCourse");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.EmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdLogin");

                    b.Property<int>("IdPerson");

                    b.Property<int>("IdRole");

                    b.HasKey("Id")
                        .HasName("PK_Employee");

                    b.HasIndex("IdLogin")
                        .HasName("IX_IdLogin");

                    b.HasIndex("IdPerson")
                        .HasName("IX_IdPerson");

                    b.HasIndex("IdRole")
                        .HasName("IX_IdRole");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.EvasionHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<int>("IdStudent");

                    b.Property<decimal>("Percentual");

                    b.HasKey("Id")
                        .HasName("PK_EvasionHistory");

                    b.HasIndex("IdStudent")
                        .HasName("IX_IdStudent");

                    b.ToTable("EvasionHistory");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.InstitutionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("IdAddress");

                    b.Property<string>("Media")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Telephone")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TradingName")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Institution");

                    b.HasIndex("IdAddress")
                        .HasName("IX_IdAddress");

                    b.ToTable("Institution");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.LoginEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPerfil");

                    b.HasKey("Id")
                        .HasName("PK_Login");

                    b.HasIndex("IdPerfil")
                        .HasName("IX_IdPerfil");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.NotificationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Data");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("PersonId")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Notification");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.PaymentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<int>("IdClass");

                    b.Property<int?>("IdClassRoom");

                    b.Property<int>("IdStudent");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id")
                        .HasName("PK_Payment");

                    b.HasIndex("IdClassRoom")
                        .HasName("IX_IdClassRoom");

                    b.HasIndex("IdStudent")
                        .HasName("IX_IdStudent");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.PerfilEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Perfil");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.PeriodEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Period");

                    b.ToTable("Period");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.PersonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<int>("IdAddress");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(MAX)");

                    b.Property<bool?>("Overdue");

                    b.Property<string>("ReasonEvasao")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TelephoneCelular")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TelephoneResidencial")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("UrlPicture")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Person");

                    b.HasIndex("IdAddress")
                        .HasName("IX_IdAddress");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.PersonTypeEntity", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id")
                        .HasName("PK_PersonType");

                    b.ToTable("PersonType");

                    b.HasData(
                        new { Id = 1, Description = "Aluno" },
                        new { Id = 2, Description = "Professor" }
                    );
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.PresenceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<int>("IdClass");

                    b.Property<int?>("IdClassRoom");

                    b.Property<int>("IdDegree");

                    b.Property<int>("IdStudent");

                    b.Property<int>("Period");

                    b.Property<bool>("Presence");

                    b.HasKey("Id")
                        .HasName("PK_Presence");

                    b.HasIndex("IdClassRoom")
                        .HasName("IX_IdClassRoom");

                    b.HasIndex("IdDegree")
                        .HasName("IX_IdDegree");

                    b.HasIndex("IdStudent")
                        .HasName("IX_IdStudent");

                    b.ToTable("Presence");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ProgramEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCoordinator");

                    b.Property<int>("Load");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Program");

                    b.HasIndex("IdCoordinator")
                        .HasName("IX_IdCoordinator");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ReasonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Reason");

                    b.ToTable("Reason");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ReasonEvasionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEvasionHistory");

                    b.Property<int>("IdReason");

                    b.HasKey("Id")
                        .HasName("PK_ReasonEvasion");

                    b.HasIndex("IdEvasionHistory")
                        .HasName("IX_IdEvasionHistory");

                    b.HasIndex("IdReason")
                        .HasName("IX_IdReason");

                    b.ToTable("ReasonEvasion");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ReasonHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdReason");

                    b.HasKey("Id")
                        .HasName("PK_ReasonHistory");

                    b.HasIndex("IdReason")
                        .HasName("IX_IdReason");

                    b.ToTable("ReasonHistory");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Role");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ScoreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<string>("Half")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("IdCourse");

                    b.Property<int>("IdStudent");

                    b.Property<decimal>("Value");

                    b.HasKey("Id")
                        .HasName("PK_Score");

                    b.HasIndex("IdCourse")
                        .HasName("IX_IdCourse");

                    b.HasIndex("IdStudent")
                        .HasName("IX_IdStudent");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.StudentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountPaymentPendent");

                    b.Property<decimal>("Distance");

                    b.Property<decimal>("EvasionChance");

                    b.Property<int>("IdPerson");

                    b.Property<DateTime>("LastPaymentDate");

                    b.Property<decimal>("MediaScore");

                    b.Property<int>("PaymentDay");

                    b.Property<int>("RA");

                    b.Property<string>("ReasonEvasion")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Student");

                    b.HasIndex("IdPerson")
                        .HasName("IX_IdPerson");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.TemplateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Template")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Template");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("IdEmployee");

                    b.Property<int>("IdPerfil");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    b.HasIndex("IdEmployee")
                        .HasName("IX_IdEmployee");

                    b.HasIndex("IdPerfil")
                        .HasName("IX_IdPerfil");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.WantedEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdReason");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("PersonId")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("Id")
                        .HasName("PK_Wanted");

                    b.HasIndex("IdReason")
                        .HasName("IX_IdReason");

                    b.ToTable("Wanted");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.AlertEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ReasonEntity", "Reason")
                        .WithMany("Alert")
                        .HasForeignKey("IdReason")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.TemplateEntity", "Template")
                        .WithMany("Alert")
                        .HasForeignKey("IdTemplate")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.CampusEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.AddressEntity", "Address")
                        .WithMany()
                        .HasForeignKey("IdAddress")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.InstitutionEntity", "Institution")
                        .WithMany("Campus")
                        .HasForeignKey("IdInstitution")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.CampusProgramEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.CampusEntity", "Campus")
                        .WithMany("CampusProgram")
                        .HasForeignKey("IdCampus")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ProgramEntity", "Program")
                        .WithMany("CampusProgram")
                        .HasForeignKey("IdProgram")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ClassDiaryEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.CourseEntity")
                        .WithMany("ClassDiary")
                        .HasForeignKey("CourseEntityId");

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ClassEntity", "Class")
                        .WithMany("ClassDiary")
                        .HasForeignKey("IdClass")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.EmployeeEntity", "Employee")
                        .WithMany("ClassDiary")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.StudentEntity", "Student")
                        .WithMany("ClassDiary")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ClassEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.DegreeEntity", "Degree")
                        .WithMany("Class")
                        .HasForeignKey("IdDegree")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ClassRoomEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.EmployeeEntity", "Employee")
                        .WithMany()
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.PeriodEntity", "Period")
                        .WithMany("ClassRoom")
                        .HasForeignKey("IdPeriod")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ProgramEntity", "Program")
                        .WithMany("ClassRoom")
                        .HasForeignKey("IdProgram")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ClassRoomStudentEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ClassRoomEntity", "ClassRoom")
                        .WithMany("ClassRoomStudent")
                        .HasForeignKey("IdClassRoom")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.StudentEntity", "Student")
                        .WithMany("ClassRoomStudent")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.DegreeCourseEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.CourseEntity", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.DegreeEntity", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeId");
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.DegreeEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ClassRoomEntity")
                        .WithMany("Degree")
                        .HasForeignKey("ClassRoomEntityId");

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.CourseEntity", "Course")
                        .WithMany("Degree")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.EmployeeEntity", "Employee")
                        .WithMany("Degree")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.EmployeeCampusEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.CampusEntity", "Campus")
                        .WithMany()
                        .HasForeignKey("IdCampus")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.EmployeeEntity", "Employee")
                        .WithMany()
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.EmployeeCourseEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.CourseEntity", "Course")
                        .WithMany()
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.EmployeeEntity", "Employee")
                        .WithMany()
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.EmployeeEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.LoginEntity", "Login")
                        .WithMany()
                        .HasForeignKey("IdLogin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.PersonEntity", "Person")
                        .WithMany("Employee")
                        .HasForeignKey("IdPerson")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.RoleEntity", "Role")
                        .WithMany("Employee")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.EvasionHistoryEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.StudentEntity", "Student")
                        .WithMany("EvasionHistory")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.InstitutionEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.AddressEntity", "Address")
                        .WithMany()
                        .HasForeignKey("IdAddress")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.LoginEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.PerfilEntity", "Perfil")
                        .WithMany()
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.PaymentEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ClassRoomEntity", "Class")
                        .WithMany("Payment")
                        .HasForeignKey("IdClassRoom")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.StudentEntity", "Student")
                        .WithMany("Payment")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.PersonEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.AddressEntity", "Address")
                        .WithMany()
                        .HasForeignKey("IdAddress")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.PresenceEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ClassRoomEntity", "Class")
                        .WithMany("Presence")
                        .HasForeignKey("IdClassRoom")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.DegreeEntity", "Degree")
                        .WithMany("Presence")
                        .HasForeignKey("IdDegree")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.StudentEntity", "Student")
                        .WithMany("Presence")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ProgramEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.EmployeeEntity", "Coordinator")
                        .WithMany("Program")
                        .HasForeignKey("IdCoordinator")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ReasonEvasionEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.EvasionHistoryEntity", "EvasionHistory")
                        .WithMany("ReasonEvasion")
                        .HasForeignKey("IdEvasionHistory")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ReasonEntity", "Reason")
                        .WithMany("ReasonEvasion")
                        .HasForeignKey("IdReason")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ReasonHistoryEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ReasonEntity", "Reason")
                        .WithMany()
                        .HasForeignKey("IdReason")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.ScoreEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.CourseEntity", "Course")
                        .WithMany("Score")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.StudentEntity", "Student")
                        .WithMany("Score")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.StudentEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.PersonEntity", "Person")
                        .WithMany("Student")
                        .HasForeignKey("IdPerson")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.UserEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.EmployeeEntity", "Employee")
                        .WithMany()
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.PerfilEntity", "Perfil")
                        .WithMany()
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FCNuvem.FidelizaAluno.Core.Entities.WantedEntity", b =>
                {
                    b.HasOne("FCNuvem.FidelizaAluno.Core.Entities.ReasonEntity", "Reason")
                        .WithMany()
                        .HasForeignKey("IdReason")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
